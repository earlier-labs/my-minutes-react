{
  "rules": {
    "tasks": {
      "$userId": {
        ".read": "auth != null && $userId === auth.uid",
        ".write": "auth != null && $userId === auth.uid",

        "$taskId": {
          "id": {},
          "createdAt": {
            ".validate": "newData.val() <= now"
          },
        	"name": {
          	".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
        	},
          "state": {
            ".validate": "newData.val() === 0 || newData.val() === 1 || newData.val() === 2"
          },
          "currentSessionPath": {},
          "goal": {
            "duration": {
							".validate": "newData.val() >= 0 && newData.val() <= 24*60*60*1000"
            },
            "repeats": {
              "0": { ".validate": "newData.val() === true || newData.val() === false"},
              "1": { ".validate": "newData.val() === true || newData.val() === false"},
              "2": { ".validate": "newData.val() === true || newData.val() === false"},
              "3": { ".validate": "newData.val() === true || newData.val() === false"},
              "4": { ".validate": "newData.val() === true || newData.val() === false"},
              "5": { ".validate": "newData.val() === true || newData.val() === false"},
              "6": { ".validate": "newData.val() === true || newData.val() === false"},
              "7": { ".validate": "newData.val() === true || newData.val() === false"},
              "$other": { ".validate": false }
            },
            "type": {
              ".validate": "newData.val() === 0 || newData.val() === 1 || newData.val() === 2"
            },
          	"$other": { ".validate": false }
          },
          "$other": { ".validate": false }
      	}
      }
    },

    "sessions": {
      "$userId": {
        ".read": "auth != null && $userId === auth.uid",
        ".write": "auth != null && $userId === auth.uid",

        "$taskId": {
          "$date": {
            "$sessionId": {
              "startedAt": {
                // TODO(not validating) ".validate": "newData.val() <= now"
              },
              "stoppedAt": {
                // TODO(not validating) ".validate": "newData.val() === null || newData.val() <= now"
              },
              "$other": { ".validate": false }
            }
          }
        }
      }
    }
  }
}
